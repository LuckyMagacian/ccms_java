<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	    <!-- 支持@RequestMapping请求和Controller映射 -->
	    <mvc:annotation-driven/>
	
	    <!-- 扫描包 -->
	    <context:component-scan base-package="com.lanxi"/>
	
	    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	    <mvc:default-servlet-handler />
	
	
	    <!-- jsp页面跳转配置 -->
	    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <property name="prefix" value="/WEB-INF/content/"/>
	        <property name="suffix" value=".jsp"/>
	    </bean>
	
	    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	        <property name="supportedMediaTypes">
	            <list>
	                <value>application/json;charset=UTF-8</value>
	            </list>
	        </property>
	    </bean>
	
	    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	        <property name="messageConverters">
	            <list>
	                <ref bean="mappingJacksonHttpMessageConverter"/>    <!-- JSON转换器 -->
	            </list>
	        </property>
	    </bean>
	
	    <!-- 上传文件 -->
	    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	        <property name="defaultEncoding" value="utf-8"/>
	        <!-- 最大内存大小 -->
	        <property name="maxInMemorySize" value="10240"/>
	        <!-- 最大文件大小，-1为不限制大小 -->
	        <property name="maxUploadSize" value="-1"/>
	    </bean>
	
		
		<!-- 任务工厂 -->
		<bean id="tasks"   lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<property name="triggers">
				<list>
					<ref local="startActivity"></ref>
					<ref local="endActivity"></ref>
				</list>
			</property>
		</bean>
		<!--调度 活动开始 短信通知-->
		<bean id="startActivity" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
			<property name="jobDetail" ref="startActivityJob"/> 
			<property name="cronExpression">
				<value>* 0 1 * * ?</value><!-- 每天的早上6点触发 -->
			</property>
		</bean>
		<!-- 任务 -->
		<bean id="startActivityJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
			<property name="targetObject" ref="quartzTaskService"/>
			<property name="targetMethod">
				<value>startActivity</value>
			</property>
		</bean>
		
		<!--调度 活动开始 短信通知-->
		<bean id="endActivity" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
			<property name="jobDetail" ref="endActivityJob"/> 
			<property name="cronExpression">
				<value>* 0 1 * * ?</value><!-- 每天的早上6点触发 -->
			</property>
		</bean>
		<!-- 任务 -->
		<bean id="endActivityJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
			<property name="targetObject" ref="quartzTaskService"/>
			<property name="targetMethod">
				<value>endActivity</value>
			</property>
		</bean>

	
	 <!-- 引入数据库配置文件 -->
    <bean id="jdbcParams" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/lanxi/dao/*.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lanxi.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	</beans>